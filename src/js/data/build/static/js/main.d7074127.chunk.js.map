{"version":3,"sources":["js/Component/theFirstPage/Index.js","js/Component/enterPage/loginPage/Login.js","js/Component/throttleComponent/throotle.js","js/Component/enterPage/attendPage/Attend.js","js/App.js","index.js"],"names":["Index","props","state","className","to","type","bg","dots","infinite","speed","slidesToShow","slidesToScroll","id","Component","Login","checkEmail","RegExp","test","email","alert","setState","firstEmail","data","axios","post","net","port","then","response","err","resmsg","msg","deleteTime","Date","getTime","cookie","save","token","expires","path","catch","error","console","log","testcode","rescode","checkLogin","bind","fn","canrun","setTimeout","apply","this","throttle","changeValue","eamilThrottle","e","name","target","value","preventDefault","sendcode","load","headers","res","history","push","pathname","onSubmit","htmlFor","placeholder","onChange","onClick","htmlType","Attend","subMit","location","mycookie","status","students","major","school_num","tel_num","direact","disabled","process","schoolnum","telnum","str","idStr","isTelCode","confirm","Modal","title","onOk","onCancel","React","App","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7074127.chunk.js","sourcesContent":["import React, {Component } from 'react'\r\nimport {Link} from 'react-router-dom'//路由跳转需要使用的组件\r\nimport  Slider from 'react-slick' // 页面中的滑动图\r\nimport ParticlesBg from \"particles-bg\"//页面背景所调用的动画库\r\nimport '../../../../node_modules/slick-carousel/slick/slick.css'// 页面中的滑动图的css样式\r\nimport \"../../../../node_modules/slick-carousel/slick/slick-theme.css\"// 页面中的滑动图的css样式\r\nimport '../theFirstPage/Index01.css'//该组件的样式\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            // 空\r\n         }; \r\n    }\r\n    render() { \r\n        const settings = {\r\n            dots: true,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1\r\n          }\r\n        return (\r\n            <div className=\"Index\">\r\n                <div className=\"Header\"> {/* 头部信息 */}\r\n                    <div className=\"container\">\r\n                        <div className=\"Left\">智邮普创</div>\r\n                        <div className=\"Right\" > <Link to = \"/Login\"  >登录</Link></div>\r\n                    </div>\r\n                 </div>\r\n                <ParticlesBg type=\"circle\" bg={true} />{/* 设置背景 */}\r\n                <div className=\"Content\"> {/* 滑动图 */}\r\n                    <div className=\"container\">\r\n                        <Slider {...settings}>\r\n                            <div className=\"front\"><h2>前端组</h2>前端开发是创建WEB页面或APP等前端界面呈现给用户的过程，通过HTML，CSS及JavaScript以及衍生出来的各种技术、框架、解决方案，来实现互联网产品的用户界面交互</div>\r\n                            <div className=\"behind\"><h2>后台组</h2>软件应用程序就像冰山一样。用户看到的只是应用程序的一部分——在大多数情况下——应用程序的最大部分是看不到的。这就是令人难以捉摸又神秘的“后端”。</div>\r\n                            <div className=\"safety\"><h2>安全运维组</h2>对学校机房环境涉及的网络、应用系统、终端、内容信息的安全进行管理，包括安全评估、安全保护、安全监控、安全响应及安全预警等。对IT基础设施进行监视、日常维护和维修保障。</div>\r\n                            <div className=\"product\"> <h2>产品组</h2>产品开发(Product Development)就是企业改进老产品或开发新产品，使其具有新的特征或用途,以满足顾客的需要。由于人们的需求经常变化和提高，企业只有不断改进产品,增加特色和功能,提高产品质量,改进外观包装装潢，才能适应消费者不断变化的需求。</div>\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n                <div className=\"btn\"> {/* 报名跳转按钮 */}\r\n                    <div className=\"logo_btn\" >\r\n                        <Link to=\"/Login\">欢迎加入我们&gt;&gt;&gt;</Link> \r\n                    </div>\r\n                </div>           \r\n                <div id=\"Footer\"> {/* 底部信息 */}\r\n                    <div className=\"container\">\r\n                        <div className=\"footer_inform\">\r\n                            <span>Copyright 2020 西安邮电大学信息中心 </span>\r\n                            <span>All Rights Reserved</span>\r\n                            <span>办公地点：长安校区图书馆5层</span>\r\n                            <span>电话：029-88166125</span>\r\n                            <span> E-mail：nic@xupt.edu.cn</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }                                                                                                                                                                                                                                                                       \r\n} \r\nexport default Index;","import React, { Component } from 'react';\r\nimport axios from 'axios'//axios是一种请求形式\r\nimport {  Button } from 'antd';//一个组件库\r\nimport '../../../../../node_modules/antd/dist/antd.css'\r\nimport './Login01.css'\r\nimport {throttle} from '../../throttleComponent/throotle'//做节流引用的组件\r\nimport cookie from 'react-cookies'//cookie保存数据引用的模块\r\n// import  './logoin.css'\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            email:\"\",//最终要登录邮箱号\r\n            firstEmail:\"\",//获取验证码的邮箱号\r\n            testcode:\"\",//验证码\r\n            rescode:\"1\",//返回的验证码\r\n            net :\"http://192.168.0.102:\",//局域网下的网址\r\n            port:\"3040\",//后台的端口号\r\n         }\r\n         this.checkLogin  = this.checkLogin.bind(this);//判断用户所有信息已经填满\r\n         this.checkEmail  = throttle(this.checkEmail);//验证邮箱是否是合法的\r\n         this.changeValue = this.changeValue.bind(this);//改变input中的值\r\n         this.eamilThrottle = this.eamilThrottle.bind(this);\r\n        }\r\n    changeValue(e){//改变每个input中的value\r\n        let name = e.target.name;\r\n         this.setState({     [name]:e.target.value});\r\n    }\r\n    eamilThrottle(e){\r\n        e.preventDefault();\r\n        this.checkEmail();\r\n    }\r\n    checkEmail = ()=>{\r\n            // 1.判断邮箱是否是有效邮箱,对qq邮箱的验证\r\n            let rg = new RegExp(\"^[1-9][0-9]{4,10}@qq.com\");\r\n            let judge = rg.test(this.state.email);\r\n                if(judge){\r\n                    this.setState({firstEmail:this.state.email});\r\n                    let data = { 'mail'  :this.state.email};\r\n                    axios.post(this.state.net+''+this.state.port+'/getMailCode',data)\r\n                            .then( (response)=> {      //  这里如果使用普通函数，那么这个里边的this指向将不会是原先的this     \r\n                                //1.这是将验证码发送到前台然后进行验证    \r\n                                // resText = response.data.rescode;// 所以会出现问题：TypeError: Cannot read property 'setState' of undefined                       \r\n                               // this.setState({ rescode:resText+\"\" }) \r\n                                //2.将验证码存储进数据库然后进行验证   \r\n                                let err = response.data.err;\r\n                                let resmsg = response.data.msg;\r\n                                if(err === 0){//\"验证码发送成功\"\r\n                                   let deleteTime = new Date(new Date().getTime()+60000); \r\n                                    cookie.save(\"sendCode\",response.data.token,{expires:deleteTime},{path:\"/\"}) \r\n                                }\r\n                                else if(err === -2){\r\n                                    alert(resmsg);//err\r\n                                }\r\n                                else if(err === -1){//'验证码发送失败'\r\n                                    alert(resmsg);\r\n                                }  \r\n                            })            \r\n                            .catch(function (error) {\r\n                                console.log(error);});\r\n                }else{\r\n                    alert(\"请检查邮箱格式是否正确\");\r\n                    return false;\r\n                }\r\n    }\r\n    checkLogin(e){\r\n        e.preventDefault(); //阻止默认值\r\n        let state = this.state;\r\n        let data ={ email:this.state.email,\r\n                    testcode:this.state.testcode};\r\n        // 1.验证邮箱是否与获取验证码之前的相同\r\n        // 2.比较输入的验证码与发送的验证码是否相同\r\n        // 从后台把验证码拿到前台然后和输入的验证码进行判断\r\n        if((state.email === state.firstEmail)){//邮箱和验证码都正确且邮箱和获取验证码的邮箱一致\r\n            let sendcode = cookie.load(\"sendCode\")\r\n            axios.post(this.state.net+''+this.state.port+ '/login',data, {headers: {\"content-type\":'application/json;charset=UTF-8',sendcode:sendcode}})\r\n                .then( (response)=> {\r\n                    let res = response.data.err;\r\n                    let resmsg = response.data.msg;\r\n                    if(res === -2){alert(resmsg);}//\"验证码已过期，请重新获取\"\r\n                    else if(res === 2){alert(resmsg);}//\"服务器错误，请再试一次\"\r\n                    else if(res === 0){//msg: '非新用户''用户首次登陆'\r\n                        let deleteTime = new Date(new Date().getTime()+600000);//单位为毫秒\r\n                        cookie.save(\"email\",response.data.token,{expires:deleteTime},{path:\"/\"})\r\n                        this.props.history.push({ pathname: '/Attend', state:this.state.email});\r\n                    }\r\n                    else if(res === -1){//\"身份验证失败\"\r\n                        alert(resmsg);\r\n                    }\r\n                    else if(res === -3){//\"验证码错误\"\r\n                        alert(resmsg);\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                   alert(error);\r\n                }); \r\n        }\r\n        else{\r\n            alert(\"请检查邮箱是否正确!!!\");\r\n            return false;\r\n        }\r\n    }\r\n    render() { \r\n        return ( \r\n        <div className=\"rootSon\">\r\n            <div className=\"logo\"></div>\r\n            <div className=\"Positon\">\r\n            <h2>登录</h2>  \r\n            <form onSubmit={this.checkLogin.bind(this)} >\r\n                        <div>\r\n                            <label htmlFor=\"account\">邮箱号:</label>\r\n                            <input  type=\"text\" id=\"account\"name=\"email\" placeholder=\"请输入您的qq邮箱\"  value={this.state.email} onChange = {this.changeValue}></input>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"Password\">验证码:</label>\r\n                            <input type=\"text\" id=\"Password\" name=\"testcode\" value = {this.state.testcode} onChange = {this.changeValue}></input>\r\n                            <Button   onClick = {this.eamilThrottle}>获取验证码</Button>{/* 使用的antd中的组件 */}\r\n                            \r\n                        </div>\r\n                        <div className=\"denglu\">\r\n                             <Button   htmlType=\"submit\" type=\"primary\" >登录</Button>\r\n                        </div>\r\n                    </form>\r\n            </div>\r\n        </div>);  }\r\n}\r\nexport default Login;\r\n\r\n\r\n","export const throttle = (fn)=>{\r\n    let canrun = true;\r\n    return function(){\r\n        if(!canrun){\r\n            return ;} \r\n        canrun = false;\r\n        setTimeout(() => { \r\n            canrun = true;\r\n        }, 60000);\r\n        fn.apply(this);  \r\n    }\r\n}\r\n// bug:验证码有效期该如何设置。\r\n// 停一会才能进行登录","import React from 'react';\r\nimport axios from 'axios';\r\nimport \"./Attend01.css\"\r\nimport cookie from 'react-cookies'\r\nimport ParticlesBg from \"particles-bg\"//背景组件库\r\nimport {  Button,Modal } from 'antd';\r\nclass Attend extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            \"process\":\"等待一面\",\r\n            \"major\":\"\",//所选专业\r\n            \"name\":\"\",//报名人名字\r\n            \"school_num\":\"\",//学号\r\n            \"tel_num\":\"\",//电话\r\n            \"direact\":\"web\",//选择的方向，默认是前端方向\r\n            \"net\" :\"http://192.168.0.102:\",//局域网的网址\r\n            \"port\":\"3040\",//端口号\r\n            \"disabled\":\"\",//用来锁定输入框，即报名成功之后将不能够修改信息\r\n            \"apply\":\"\"//用来判断是否已报名，若已经报名那么将不允许继续发送报名请求\r\n         }\r\n         this.changeValue = this.changeValue.bind(this);//绑定this\r\n         this.subMit = this.subMit.bind(this);\r\n    }\r\n    changeValue(e){\r\n        let name = e.target.name;\r\n        this.setState({[name]:e.target.value});\r\n    }\r\n    componentDidMount(){\r\n        let data = {\r\n            email:this.props.location.state};\r\n        let token = cookie.load(\"email\");//获取cookie\r\n        // 每个页面请求返回只能返回一次res.send()，不然会报错\r\n        // 这个请求的作用:向数据库中搜索用户信息，若搜索到，那么渲染到页面上\r\n            axios.post(this.state.net+''+this.state.port+ '/Attend',data,{headers:{\"content-type\":'application/json;charset=UTF-8',mycookie:token}})\r\n                .then((response)=>{\r\n                    let status = response.data.msg;\r\n                    if(status === 1){//token未过期，且数据库有数据\r\n                        let data = response.data.students[0];\r\n                        this.setState({\r\n                            \"major\":data.major,\r\n                            \"name\":data.name,\r\n                            \"school_num\":data.school_num,\r\n                            \"tel_num\":data.tel_num,\r\n                            \"direact\":data.direact,\r\n                            \"disabled\":data.disabled,\r\n                            \"process\":data.process,\r\n                            \"apply\":1});\r\n                    }\r\n                    else if(status === -1){//token过期\r\n                        alert('登录已过期，请重新登录');\r\n                        this.props.history.push('/Login');\r\n                    }\r\n                    else if(status === 0){}//不进行任何操作3\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err);\r\n            })\r\n    }\r\n    subMit(e){\r\n        e.preventDefault();//阻止默认事件\r\n        let token = cookie.load(\"email\");//获取cookie\r\n        let name,schoolnum,telnum; \r\n        let data ={\r\n            \"major\":this.state.major,\r\n            \"name\":this.state.name,\r\n            \"school_num\":this.state.school_num,\r\n            \"tel_num\":this.state.tel_num,\r\n            \"direact\":this.state.direact,\r\n            \"email\":this.props.location.state,\r\n            \"process\":this.state.process};\r\n        function ischina(str) {/* 姓名：校验是否中文名称组成 */\r\n            var reg =  /^[\\u4E00-\\u9FA5\\uf900-\\ufa2d·s]{2,20}$/; /*定义验证表达式*/\r\n            return reg.test(str); /*进行验证*/\r\n        }\r\n        function isStudentNo(idStr) {/*学号：校验是否全由8位数字组成 */\r\n            var reg = /^[0-9]{8}$/; /*定义验证表达式*/\r\n            return reg.test(idStr); /*进行验证*/\r\n        }  \r\n        function isTelCode(str) { /*校验手机号格式 */\r\n            var reg = /^1(?:3\\d|4[4-9]|5[0-35-9]|6[67]|7[013-8]|8\\d|9\\d)\\d{8}$/;\r\n            return reg.test(str);\r\n        }\r\n        name = ischina(this.state.name);\r\n        schoolnum = isStudentNo(this.state.school_num);\r\n        telnum = isTelCode(this.state.tel_num);\r\n        if(!(name&&schoolnum&&telnum)){\r\n            alert(\"请检查填写的信息是否正确！！！\");\r\n            return false;\r\n        }\r\n        else{\r\n            if(this.state.apply !== 1){\r\n                const confirm = Modal.confirm;\r\n                    confirm({\r\n                            title: \"确认提交报名信息吗?确认后不可以修改呦\",\r\n                            onOk :()=>{\r\n                                axios.post(this.state.net+''+this.state.port+ '/inDatabase',data,{headers:{\"content-type\":'application/json;charset=UTF-8',mycookie:token}})\r\n                                .then((response)=>{\r\n                                    console.log(response);\r\n                                    let status = response.data.status;\r\n                                    let resmsg = response.data.msg;\r\n                                    if(status === \"1\"){\r\n                                        alert(resmsg);\r\n                                        this.props.history.push(\"/\");\r\n                                    }\r\n                                    else if(status === 0){\r\n                                        alert(resmsg);\r\n                                    }\r\n                                    else if(status === -1){\r\n                                        alert(resmsg);\r\n                                    }\r\n                                    else{\r\n                                        alert(resmsg);\r\n                                        this.props.history.push('/Login');\r\n                                    }})\r\n                                .catch((error)=>{\r\n                                            console.log(error);})\r\n                                },\r\n                                onCancel:() =>{                  \r\n                                    // 取消就是没有发送请求，用户可以继续填写报名信息\r\n                                }});  \r\n            }\r\n            else{\r\n                alert(\"该邮箱已经绑定了一位用户,请使用未绑定用户的邮箱!!!\");return false;}\r\n        }   \r\n    }\r\n    render() { \r\n        return (  \r\n            <div className = \"Page\"> \r\n                <div className = \"process\">\r\n                    <span>当前面试进度</span>\r\n                    <span><input type=\"text\" value={this.state.process} disabled=\"true\"></input></span>\r\n                </div>\r\n                <ParticlesBg type=\"circle\" bg={true} />\r\n                <div className = \"stu_inform\">\r\n                    <h2>报名信息</h2>\r\n                    <form onSubmit={this.subMit} className=\"attendForm\">\r\n                        <div><span><label htmlFor=\"major\" className=\"align\">专业班级：</label></span><span></span><input type=\"text\" id=\"major\" name=\"major\" value={this.state.major} onChange={this.changeValue} disabled={this.state.disabled}></input></div>\r\n                        <div><span><label htmlFor=\"name\" className=\"align\">姓名：</label></span><span><input type=\"text\" id=\"name\" name=\"name\" value={this.state.name} onChange={this.changeValue}  disabled={this.state.disabled}></input></span></div>\r\n                        <div><span><label htmlFor=\"school_num\" className=\"align\">学号：</label></span><span><input type=\"text\" id=\"school_num\" name=\"school_num\" value={this.state.school_num} onChange={this.changeValue} disabled={this.state.disabled}></input></span></div>\r\n                        <div><span><label htmlFor=\"tel_num\" className=\"align\">电话号码：</label></span><span><input type=\"text\" id=\"tel_num\" name=\"tel_num\" value={this.state.tel_num} onChange={this.changeValue} disabled={this.state.disabled}></input ></span></div>\r\n                        <div><span className=\"align\">选择的方向：</span><span><select id=\"direaction\" name=\"direact\" value={this.state.direact} onChange={this.changeValue} disabled={this.state.disabled}>\r\n                                <option  value=\"web\">前端组</option>\r\n                                <option  value=\"behind\">后台组</option>\r\n                                <option  value=\"security\">安全运维组</option>\r\n                                <option  value=\"product\">产品组</option>\r\n                            </select></span>\r\n                        </div>\r\n                        <div className=\"baoming\"><Button htmlType=\"submit\" type=\"primary\" >立即报名</Button></div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Attend;","import React, { Component } from 'react';\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\r\nimport Index from '../js/Component/theFirstPage/Index'\r\nimport Login from './Component/enterPage/loginPage/Login'\r\nimport Attend from './Component/enterPage/attendPage/Attend'\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n        \r\n        }\r\n    }\r\n    render() { \r\n        return (\r\n            <Router>\r\n                {/* <Redirect to='/Index'/> */}\r\n                <Route  exact path='/' component={Index}></Route>\r\n                <Route path='/Login' component={Login}></Route> \r\n                <Route path = \"/Attend\" component = {Attend }></Route>\r\n            </Router> \r\n         );\r\n    }\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '../src/js/App'\n//import Test from './store/setState'\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}